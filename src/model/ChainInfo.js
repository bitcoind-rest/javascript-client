/**
 * Bitcoind
 * The REST API can be enabled with the `-rest` option. The interface runs on the same port as the JSON-RPC interface, by default port `8332` for **mainnet**, port `18332` for **testnet**, and port `18443` for **regtest**.
 *
 * OpenAPI spec version: 0.16
 * Contact: johan@lepetitbloc.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BIP', 'model/ChainInfoBip9Softforks'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BIP'), require('./ChainInfoBip9Softforks'));
  } else {
    // Browser globals (root is window)
    if (!root.BitcoindRestClient) {
      root.BitcoindRestClient = {};
    }
    root.BitcoindRestClient.ChainInfo = factory(root.BitcoindRestClient.ApiClient, root.BitcoindRestClient.BIP, root.BitcoindRestClient.ChainInfoBip9Softforks);
  }
}(this, function(ApiClient, BIP, ChainInfoBip9Softforks) {
  'use strict';




  /**
   * The ChainInfo model module.
   * @module model/ChainInfo
   * @version 0.16
   */

  /**
   * Constructs a new <code>ChainInfo</code>.
   * @alias module:model/ChainInfo
   * @class
   */
  var exports = function() {
    var _this = this;















  };

  /**
   * Constructs a <code>ChainInfo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ChainInfo} obj Optional instance to populate.
   * @return {module:model/ChainInfo} The populated <code>ChainInfo</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('chain')) {
        obj['chain'] = ApiClient.convertToType(data['chain'], 'String');
      }
      if (data.hasOwnProperty('blocks')) {
        obj['blocks'] = ApiClient.convertToType(data['blocks'], 'Number');
      }
      if (data.hasOwnProperty('headers')) {
        obj['headers'] = ApiClient.convertToType(data['headers'], 'Number');
      }
      if (data.hasOwnProperty('bestblockhash')) {
        obj['bestblockhash'] = ApiClient.convertToType(data['bestblockhash'], 'String');
      }
      if (data.hasOwnProperty('difficulty')) {
        obj['difficulty'] = ApiClient.convertToType(data['difficulty'], 'Number');
      }
      if (data.hasOwnProperty('mediantime')) {
        obj['mediantime'] = ApiClient.convertToType(data['mediantime'], 'Number');
      }
      if (data.hasOwnProperty('verificationprogress')) {
        obj['verificationprogress'] = ApiClient.convertToType(data['verificationprogress'], 'Number');
      }
      if (data.hasOwnProperty('initialblockdownload')) {
        obj['initialblockdownload'] = ApiClient.convertToType(data['initialblockdownload'], 'Boolean');
      }
      if (data.hasOwnProperty('chainwork')) {
        obj['chainwork'] = ApiClient.convertToType(data['chainwork'], 'String');
      }
      if (data.hasOwnProperty('size_on_disk')) {
        obj['size_on_disk'] = ApiClient.convertToType(data['size_on_disk'], 'Number');
      }
      if (data.hasOwnProperty('pruned')) {
        obj['pruned'] = ApiClient.convertToType(data['pruned'], 'Boolean');
      }
      if (data.hasOwnProperty('softforks')) {
        obj['softforks'] = ApiClient.convertToType(data['softforks'], [BIP]);
      }
      if (data.hasOwnProperty('bip9_softforks')) {
        obj['bip9_softforks'] = ChainInfoBip9Softforks.constructFromObject(data['bip9_softforks']);
      }
      if (data.hasOwnProperty('warnings')) {
        obj['warnings'] = ApiClient.convertToType(data['warnings'], 'String');
      }
    }
    return obj;
  }

  /**
   * Current network name as defined in BIP70 (main, test, regtest)
   * @member {module:model/ChainInfo.ChainEnum} chain
   */
  exports.prototype['chain'] = undefined;
  /**
   * The current number of blocks processed in the server
   * @member {Number} blocks
   */
  exports.prototype['blocks'] = undefined;
  /**
   * The current number of headers we have validated
   * @member {Number} headers
   */
  exports.prototype['headers'] = undefined;
  /**
   * The hash of the currently best block
   * @member {String} bestblockhash
   */
  exports.prototype['bestblockhash'] = undefined;
  /**
   * The current difficulty
   * @member {Number} difficulty
   */
  exports.prototype['difficulty'] = undefined;
  /**
   * The median time of the 11 blocks before the most recent block on the blockchain
   * @member {Number} mediantime
   */
  exports.prototype['mediantime'] = undefined;
  /**
   * Estimate of verification progress [0..1]
   * @member {Number} verificationprogress
   */
  exports.prototype['verificationprogress'] = undefined;
  /**
   * @member {Boolean} initialblockdownload
   */
  exports.prototype['initialblockdownload'] = undefined;
  /**
   * Total amount of work in active chain, in hexadecimal
   * @member {String} chainwork
   */
  exports.prototype['chainwork'] = undefined;
  /**
   * @member {Number} size_on_disk
   */
  exports.prototype['size_on_disk'] = undefined;
  /**
   * If the blocks are subject to pruning
   * @member {Boolean} pruned
   */
  exports.prototype['pruned'] = undefined;
  /**
   * status of softforks in progress
   * @member {Array.<module:model/BIP>} softforks
   */
  exports.prototype['softforks'] = undefined;
  /**
   * @member {module:model/ChainInfoBip9Softforks} bip9_softforks
   */
  exports.prototype['bip9_softforks'] = undefined;
  /**
   * An eventual warning on the current build status.
   * @member {String} warnings
   */
  exports.prototype['warnings'] = undefined;


  /**
   * Allowed values for the <code>chain</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ChainEnum = {
    /**
     * value: "main"
     * @const
     */
    "main": "main",
    /**
     * value: "test"
     * @const
     */
    "test": "test",
    /**
     * value: "regtest"
     * @const
     */
    "regtest": "regtest"  };


  return exports;
}));


