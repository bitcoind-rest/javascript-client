/**
 * Bitcoind
 * The REST API can be enabled with the `-rest` option. The interface runs on the same port as the JSON-RPC interface, by default port `8332` for **mainnet**, port `18332` for **testnet**, and port `18443` for **regtest**.
 *
 * OpenAPI spec version: 0.16
 * Contact: johan@lepetitbloc.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.BitcoindRestClient) {
      root.BitcoindRestClient = {};
    }
    root.BitcoindRestClient.ScriptPubKey = factory(root.BitcoindRestClient.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The ScriptPubKey model module.
   * @module model/ScriptPubKey
   * @version 0.16
   */

  /**
   * Constructs a new <code>ScriptPubKey</code>.
   * @alias module:model/ScriptPubKey
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>ScriptPubKey</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ScriptPubKey} obj Optional instance to populate.
   * @return {module:model/ScriptPubKey} The populated <code>ScriptPubKey</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('asm')) {
        obj['asm'] = ApiClient.convertToType(data['asm'], 'String');
      }
      if (data.hasOwnProperty('hex')) {
        obj['hex'] = ApiClient.convertToType(data['hex'], 'String');
      }
      if (data.hasOwnProperty('reqSigs')) {
        obj['reqSigs'] = ApiClient.convertToType(data['reqSigs'], 'Number');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
      if (data.hasOwnProperty('addresses')) {
        obj['addresses'] = ApiClient.convertToType(data['addresses'], ['String']);
      }
    }
    return obj;
  }

  /**
   * @member {String} asm
   */
  exports.prototype['asm'] = undefined;
  /**
   * @member {String} hex
   */
  exports.prototype['hex'] = undefined;
  /**
   * @member {Number} reqSigs
   */
  exports.prototype['reqSigs'] = undefined;
  /**
   * @member {module:model/ScriptPubKey.TypeEnum} type
   * @default 'pubkeyhash'
   */
  exports.prototype['type'] = 'pubkeyhash';
  /**
   * @member {Array.<String>} addresses
   */
  exports.prototype['addresses'] = undefined;


  /**
   * Allowed values for the <code>type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: "nonstandard"
     * @const
     */
    "nonstandard": "nonstandard",
    /**
     * value: "pubkey"
     * @const
     */
    "pubkey": "pubkey",
    /**
     * value: "pubkeyhash"
     * @const
     */
    "pubkeyhash": "pubkeyhash",
    /**
     * value: "scripthash"
     * @const
     */
    "scripthash": "scripthash",
    /**
     * value: "multisig"
     * @const
     */
    "multisig": "multisig",
    /**
     * value: "nulldata"
     * @const
     */
    "nulldata": "nulldata",
    /**
     * value: "witness_v0_keyhash"
     * @const
     */
    "witness_v0_keyhash": "witness_v0_keyhash",
    /**
     * value: "witness_v0_scripthash"
     * @const
     */
    "witness_v0_scripthash": "witness_v0_scripthash",
    /**
     * value: "witness_unknown"
     * @const
     */
    "witness_unknown": "witness_unknown"  };


  return exports;
}));


