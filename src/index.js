/**
 * Bitcoind
 * The REST API can be enabled with the `-rest` option. The interface runs on the same port as the JSON-RPC interface, by default port `8332` for **mainnet**, port `18332` for **testnet**, and port `18443` for **regtest**.
 *
 * OpenAPI spec version: 0.16
 * Contact: johan@lepetitbloc.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BIP', 'model/BIP9', 'model/BIPReject', 'model/Block', 'model/ChainInfo', 'model/ChainInfoBip9Softforks', 'model/InlineResponse200', 'model/InlineResponseDefault', 'model/MemoryPool', 'model/ScriptPubKey', 'model/Transaction', 'model/UTxO', 'api/BlockApi', 'api/ChainApi', 'api/MemoryPoolApi', 'api/TransactionApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/BIP'), require('./model/BIP9'), require('./model/BIPReject'), require('./model/Block'), require('./model/ChainInfo'), require('./model/ChainInfoBip9Softforks'), require('./model/InlineResponse200'), require('./model/InlineResponseDefault'), require('./model/MemoryPool'), require('./model/ScriptPubKey'), require('./model/Transaction'), require('./model/UTxO'), require('./api/BlockApi'), require('./api/ChainApi'), require('./api/MemoryPoolApi'), require('./api/TransactionApi'));
  }
}(function(ApiClient, BIP, BIP9, BIPReject, Block, ChainInfo, ChainInfoBip9Softforks, InlineResponse200, InlineResponseDefault, MemoryPool, ScriptPubKey, Transaction, UTxO, BlockApi, ChainApi, MemoryPoolApi, TransactionApi) {
  'use strict';

  /**
   * Generated bitcoind Rest client.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var BitcoindRestClient = require('index'); // See note below*.
   * var xxxSvc = new BitcoindRestClient.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new BitcoindRestClient.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new BitcoindRestClient.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new BitcoindRestClient.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 0.16
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The BIP model constructor.
     * @property {module:model/BIP}
     */
    BIP: BIP,
    /**
     * The BIP9 model constructor.
     * @property {module:model/BIP9}
     */
    BIP9: BIP9,
    /**
     * The BIPReject model constructor.
     * @property {module:model/BIPReject}
     */
    BIPReject: BIPReject,
    /**
     * The Block model constructor.
     * @property {module:model/Block}
     */
    Block: Block,
    /**
     * The ChainInfo model constructor.
     * @property {module:model/ChainInfo}
     */
    ChainInfo: ChainInfo,
    /**
     * The ChainInfoBip9Softforks model constructor.
     * @property {module:model/ChainInfoBip9Softforks}
     */
    ChainInfoBip9Softforks: ChainInfoBip9Softforks,
    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200: InlineResponse200,
    /**
     * The InlineResponseDefault model constructor.
     * @property {module:model/InlineResponseDefault}
     */
    InlineResponseDefault: InlineResponseDefault,
    /**
     * The MemoryPool model constructor.
     * @property {module:model/MemoryPool}
     */
    MemoryPool: MemoryPool,
    /**
     * The ScriptPubKey model constructor.
     * @property {module:model/ScriptPubKey}
     */
    ScriptPubKey: ScriptPubKey,
    /**
     * The Transaction model constructor.
     * @property {module:model/Transaction}
     */
    Transaction: Transaction,
    /**
     * The UTxO model constructor.
     * @property {module:model/UTxO}
     */
    UTxO: UTxO,
    /**
     * The BlockApi service constructor.
     * @property {module:api/BlockApi}
     */
    BlockApi: BlockApi,
    /**
     * The ChainApi service constructor.
     * @property {module:api/ChainApi}
     */
    ChainApi: ChainApi,
    /**
     * The MemoryPoolApi service constructor.
     * @property {module:api/MemoryPoolApi}
     */
    MemoryPoolApi: MemoryPoolApi,
    /**
     * The TransactionApi service constructor.
     * @property {module:api/TransactionApi}
     */
    TransactionApi: TransactionApi
  };

  return exports;
}));
